{"version":3,"sources":["components/InfoBox.js","utils.js","components/DataOnMap.js","components/Map.js","components/Table.js","components/LineGraph.js","App.js","index.js"],"names":["InfoBox","props","_jsx","Card","onClick","className","active","casesType","children","_jsxs","CardContent","Typography","color","title","cases","total","prettyPrintStat","stat","numeral","format","CountryContext","createContext","selectedCountry","CountryContextProvider","country","setCountry","useState","context","selectCountry","Provider","value","circleVisual","hex","multiplier","recovered","deaths","DataOnMap","infoWindowState","setInfoWindowState","countryCtx","useContext","useEffect","_Fragment","mapDrawingsMode","Circle","center","lat","countryInfo","lng","long","options","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","clickable","draggable","editable","visible","radius","zIndex","InfoWindow","position","onCloseClick","style","backgroundImage","flag","containerStyle","width","height","Map","setMapDrawingsMode","isLoaded","useJsApiLoader","id","googleMapsApiKey","FormControl","RadioGroup","row","onChange","event","target","FormControlLabel","control","Radio","label","GoogleMap","mapContainerStyle","zoom","countries","map","Table","_ref","LineGraph","days","data","setData","colorCasesType","async","fetch","then","response","json","chartData","buildChartData","fetchData","lastDataPoint","date","newDataPoint","x","y","push","Line","datasets","backgroundColor","borderColor","responsive","maintainAspectRatio","plugins","legend","display","scales","type","time","displayFormats","quarter","tooltipFormat","elements","point","hitRadius","line","borderWidth","App","baseUrl","setCountries","setCountryInfo","tableData","setTableData","mapCenter","setMapCenter","mapZoom","setMapZoom","mapCountries","setMapCountries","setCasesType","setDays","getWorldwideData","countriesData","countryData","name","iso2","sort","a","b","sortData","getCountriesData","Select","variant","countryCode","url","_data$countryInfo","_data$countryInfo2","MenuItem","todayCases","split","todayRecovered","todayDeaths","da","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3a3bddf9.chunk.js","sourcesContent":["import React from 'react';\nimport { Card, CardContent, Typography } from '@material-ui/core';\nimport './InfoBox.css';\n\nfunction InfoBox(props) {\n  return (\n    <Card\n      onClick={props.onClick}\n      className={`infoBox ${props.active && 'infoBox--selected'} ${\n        props.casesType === 'cases' && 'infoBox--red'\n      } ${props.casesType === 'deaths' && 'infoBox--gray'}`}\n    >\n      <CardContent>\n        <Typography className=\"infoBox__title\" color=\"textSecondary\">\n          {props.title}\n        </Typography>\n\n        <h2\n          className={`infoBox__cases ${\n            props.casesType === 'cases' && 'infoBox__cases--red'\n          } ${props.casesType === 'deaths' && 'infoBox__cases--gray'}`}\n        >\n          {props.cases}\n        </h2>\n\n        <Typography className=\"infoBox__total\" color=\"textSecondary\">\n          {props.total} Total\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default InfoBox;\n","import { createContext, useState } from 'react';\nimport numeral from 'numeral';\n\nexport const sortData = (data) => {\n  data.sort((a, b) => {\n    return b.cases - a.cases;\n  });\n\n  return data;\n};\n\nexport const prettyPrintStat = (stat) =>\n  stat ? `+${numeral(stat).format('0.0a')}` : '+0';\n\nconst CountryContext = createContext({\n  selectedCountry: '',\n});\n\nexport const CountryContextProvider = (props) => {\n  const [country, setCountry] = useState('');\n\n  const selectCountryHandler = (country) => {\n    setCountry(country);\n  };\n\n  const context = {\n    selectedCountry: country,\n    selectCountry: selectCountryHandler,\n  };\n\n  return (\n    <CountryContext.Provider value={context}>\n      {props.children}\n    </CountryContext.Provider>\n  );\n};\n\nexport default CountryContext;\n","import { useState, useContext, useEffect } from 'react';\nimport { Circle, InfoWindow } from '@react-google-maps/api';\nimport numeral from 'numeral';\nimport './DataOnMap.css';\nimport CountryContext from '../utils';\n\nconst circleVisual = {\n  cases: {\n    hex: '#cc1034',\n    multiplier: 0.03,\n  },\n  recovered: {\n    hex: '#7dd71d',\n    multiplier: 0.03,\n  },\n  deaths: {\n    hex: '#c0c0c0',\n    multiplier: 1,\n  },\n};\n\nfunction DataOnMap(props) {\n  const [infoWindowState, setInfoWindowState] = useState(false);\n\n  const countryCtx = useContext(CountryContext);\n  useEffect(() => {\n    countryCtx.selectedCountry === props.country.country &&\n      setInfoWindowState(true);\n  }, [countryCtx.selectedCountry, props.country.country]);\n\n  return (\n    <>\n      {props.mapDrawingsMode === 'circle' && (\n        <Circle\n          center={{\n            lat: props.country.countryInfo.lat,\n            lng: props.country.countryInfo.long,\n          }}\n          options={{\n            strokeColor: circleVisual[props.casesType].hex,\n            strokeOpacity: 0.9,\n            strokeWeight: 2,\n            fillColor: circleVisual[props.casesType].hex,\n            fillOpacity: 0.35,\n            clickable: true,\n            draggable: false,\n            editable: false,\n            visible: true,\n            radius:\n              props.country[props.casesType] *\n                circleVisual[props.casesType].multiplier >\n              15000\n                ? props.country[props.casesType] *\n                  circleVisual[props.casesType].multiplier\n                : 15000,\n            zIndex: 1,\n          }}\n          onClick={() => setInfoWindowState(true)}\n        />\n      )}\n\n      {infoWindowState && (\n        <InfoWindow\n          position={{\n            lat: props.country.countryInfo.lat,\n            lng: props.country.countryInfo.long,\n          }}\n          onCloseClick={() => setInfoWindowState(false)}\n        >\n          <div className=\"info-container\">\n            <div\n              className=\"info-flag\"\n              style={{\n                backgroundImage: `url(${props.country.countryInfo.flag})`,\n              }}\n            />\n\n            <div className=\"info-name\">{props.country.country}</div>\n\n            <div className=\"info-cases\">\n              Cases: {numeral(props.country.cases).format('0,0')}\n            </div>\n\n            <div className=\"info-recovered\">\n              Recovered: {numeral(props.country.recovered).format('0,0')}\n            </div>\n\n            <div className=\"info-deaths\">\n              Deaths: {numeral(props.country.deaths).format('0,0')}\n            </div>\n          </div>\n        </InfoWindow>\n      )}\n    </>\n  );\n}\n\nexport default DataOnMap;\n","import React, { useState } from 'react';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\nimport './Map.css';\nimport {\n  Card,\n  CardContent,\n  FormControl,\n  RadioGroup,\n  Radio,\n  FormControlLabel,\n} from '@material-ui/core';\nimport DataOnMap from './DataOnMap';\n\nconst containerStyle = {\n  width: '100%',\n  height: '100%',\n};\n\nfunction Map(props) {\n  const [mapDrawingsMode, setMapDrawingsMode] = useState('circle');\n  const { isLoaded } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: '',\n  });\n\n  return isLoaded ? (\n    <Card className=\"map__card\">\n      <CardContent className=\"map\">\n        <div className=\"map__head\">\n          <FormControl>\n            <RadioGroup\n              row\n              value={mapDrawingsMode}\n              onChange={(event) => setMapDrawingsMode(event.target.value)}\n            >\n              <FormControlLabel\n                value=\"circle\"\n                control={<Radio color=\"primary\" />}\n                label=\"Circle\"\n              />\n              <FormControlLabel\n                value=\"none\"\n                control={<Radio color=\"primary\" />}\n                label=\"None\"\n              />\n            </RadioGroup>\n          </FormControl>\n        </div>\n\n        <GoogleMap\n          mapContainerStyle={containerStyle}\n          center={props.center}\n          zoom={props.zoom}\n        >\n          {props.countries.map((country) => (\n            <DataOnMap\n              country={country}\n              casesType={props.casesType}\n              key={country.country}\n              mapDrawingsMode={mapDrawingsMode}\n            />\n          ))}\n        </GoogleMap>\n      </CardContent>\n    </Card>\n  ) : (\n    <></>\n  );\n}\n\nexport default Map;\n","import React from 'react';\nimport './Table.css';\nimport numeral from 'numeral';\n\nfunction Table(props) {\n  return (\n    <table className=\"table\">\n      <tbody>\n        {props.countries.map(({ country, cases }) => (\n          <tr key={country}>\n            <td>{country}</td>\n            <td>\n              <strong>{numeral(cases).format('0,0')}</strong>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nexport default Table;\n","import React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport 'chartjs-adapter-moment';\nimport './LineGraph.css';\n\nfunction LineGraph({ casesType, days }) {\n  const [data, setData] = useState([]);\n\n  const colorCasesType =\n    casesType === 'cases'\n      ? '#cc1034'\n      : casesType === 'deaths'\n      ? 'gray'\n      : '#478604';\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\n        `https://disease.sh/v3/covid-19/historical/all?lastdays=${days}`\n      )\n        .then((response) => response.json())\n        .then((data) => {\n          // console.log('pppppp', data);\n          const chartData = buildChartData(data, casesType);\n          setData(chartData);\n        });\n    };\n\n    fetchData();\n  }, [casesType, days]);\n\n  const buildChartData = (data, casesType) => {\n    const chartData = [];\n    let lastDataPoint;\n\n    for (let date in data.cases) {\n      if (lastDataPoint) {\n        const newDataPoint = {\n          x: date,\n          y: data[casesType][date] - lastDataPoint,\n        };\n\n        chartData.push(newDataPoint);\n      }\n\n      lastDataPoint = data[casesType][date];\n    }\n\n    return chartData;\n  };\n\n  return (\n    <div className=\"graph\">\n      <Line\n        data={{\n          datasets: [\n            {\n              backgroundColor: colorCasesType,\n              borderColor: colorCasesType,\n              data: data,\n            },\n          ],\n        }}\n        options={{\n          responsive: true,\n          maintainAspectRatio: false,\n          plugins: {\n            legend: {\n              display: false,\n            },\n          },\n          scales: {\n            x: {\n              type: 'time',\n              time: {\n                displayFormats: {\n                  quarter: 'MMM YYYY',\n                },\n                tooltipFormat: 'MMM DD, YYYY',\n              },\n            },\n          },\n          elements: {\n            point: {\n              radius: 1,\n              hitRadius: 2,\n            },\n            line: {\n              borderWidth: 1,\n            },\n          },\n        }}\n      />\n    </div>\n  );\n}\n\nexport default LineGraph;\n","import './App.css';\nimport {\n  MenuItem,\n  FormControl,\n  Select,\n  Card,\n  CardContent,\n} from '@material-ui/core';\nimport { useState, useEffect, useContext } from 'react';\nimport InfoBox from './components/InfoBox';\nimport Map from './components/Map';\nimport Table from './components/Table';\nimport { sortData, prettyPrintStat } from './utils';\nimport LineGraph from './components/LineGraph';\nimport CountryContext from './utils';\n\nfunction App() {\n  const baseUrl = 'https://disease.sh/v3/covid-19/';\n\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState('worldwide');\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [mapCenter, setMapCenter] = useState({ lat: 24.80746, lng: 0.4796 });\n  const [mapZoom, setMapZoom] = useState(2);\n  const [mapCountries, setMapCountries] = useState([]);\n  const countryCtx = useContext(CountryContext);\n  const [casesType, setCasesType] = useState('cases');\n\n  const [days, setDays] = useState('30');\n  const daysAvail = ['30', '60', '120', 'all'];\n\n  useEffect(() => {\n    const getWorldwideData = async () => {\n      await fetch(`${baseUrl}all`)\n        .then((response) => response.json())\n        .then((data) => {\n          setCountryInfo(data);\n        });\n    };\n\n    getWorldwideData();\n  }, []);\n\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch(`${baseUrl}countries`)\n        .then((response) => response.json())\n        .then((data) => {\n          const countriesData = data.map((countryData) => ({\n            name: countryData.country,\n            value: countryData.countryInfo.iso2,\n          }));\n\n          setCountries(countriesData);\n\n          setTableData(sortData(data));\n\n          setMapCountries(data);\n        });\n    };\n\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async (event) => {\n    const countryCode = event.target.value;\n    // console.log('qqqqqqqqqq', countryCode);\n    setCountry(countryCode);\n\n    const url =\n      countryCode === 'worldwide'\n        ? `${baseUrl}all`\n        : `${baseUrl}countries/${countryCode}`;\n\n    await fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setCountryInfo(data);\n\n        setMapCenter({\n          lat: data.countryInfo?.lat || 24.80746,\n          lng: data.countryInfo?.long || 0.4796,\n        });\n\n        countryCode === 'worldwide' ? setMapZoom(2) : setMapZoom(4);\n\n        data.country\n          ? countryCtx.selectCountry(data.country)\n          : countryCtx.selectCountry('worldwide');\n      });\n  };\n\n  // console.log('zzzzzzzzzzzzzzzzzzzz', countryInfo);\n\n  // BEM naming convention\n  return (\n    <div>\n      <div className=\"app\">\n        <div className=\"app__left\">\n          <div className=\"app__header\">\n            <h1>COVID-19 TRACKER</h1>\n\n            <FormControl className=\"app__dropdown\">\n              <Select\n                variant=\"outlined\"\n                value={country}\n                onChange={onCountryChange}\n              >\n                <MenuItem value=\"worldwide\" key=\"worldwide\">\n                  Worldwide\n                </MenuItem>\n\n                {countries.map((country) => (\n                  <MenuItem value={country.value} key={country.name}>\n                    {country.name}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </div>\n\n          <div className=\"app__stats\">\n            <InfoBox\n              title=\"Coronavirus cases\"\n              cases={prettyPrintStat(countryInfo.todayCases)}\n              total={prettyPrintStat(countryInfo.cases).split('+')[1]}\n              onClick={() => setCasesType('cases')}\n              active={casesType === 'cases'}\n              casesType=\"cases\"\n            />\n            <InfoBox\n              title=\"Recovered\"\n              cases={prettyPrintStat(countryInfo.todayRecovered)}\n              total={prettyPrintStat(countryInfo.recovered).split('+')[1]}\n              onClick={() => setCasesType('recovered')}\n              active={casesType === 'recovered'}\n              casesType=\"recovered\"\n            />\n            <InfoBox\n              title=\"Deaths\"\n              cases={prettyPrintStat(countryInfo.todayDeaths)}\n              total={prettyPrintStat(countryInfo.deaths).split('+')[1]}\n              onClick={() => setCasesType('deaths')}\n              active={casesType === 'deaths'}\n              casesType=\"deaths\"\n            />\n          </div>\n\n          <Map\n            center={mapCenter}\n            zoom={mapZoom}\n            countries={mapCountries}\n            casesType={casesType}\n          />\n        </div>\n\n        <Card className=\"app__right\">\n          <CardContent className=\"app__right__content\">\n            <h4>All cases recorded by country</h4>\n            <Table countries={tableData} />\n\n            <div className=\"app__right__da\">\n              <h4>Worldwide new {casesType}</h4>\n              <FormControl>\n                <Select\n                  value={days}\n                  onChange={(event) => setDays(event.target.value)}\n                >\n                  {daysAvail.map((da) => (\n                    <MenuItem value={da} key={da}>\n                      {da} days\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </div>\n\n            <LineGraph casesType={casesType} days={days} />\n          </CardContent>\n        </Card>\n      </div>\n      <div className=\"dataReference\">Data from: <u>https://disease.sh/</u></div>\n      <div className=\"dataReference\">Code reference: <u>https://www.youtube.com/watch?v=cF3pIMJUZxM</u></div>\n      <div className=\"dataReference\">Contact me: <u>https://www.linkedin.com/in/phuc-tran-184668224/</u></div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { CountryContextProvider } from './utils';\n\nReactDOM.render(\n  <CountryContextProvider>\n    <App />\n  </CountryContextProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}